using FluentValidation;
using Newtonsoft.Json.Linq;
using System;
using Utilities;

namespace SActividadTipo.Controllers
{
    /// <summary>
    /// A class which represents the ComponenteTipoValidator.
    /// Generated by SIPRO TEAM. May 2018. 
    /// </summary>

    public class ActividadTipoValidator : AbstractValidator<JObject>
    {
        public ActividadTipoValidator()
        {
            //RuleFor(componente_tipo => componente_tipo["id"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(componente_tipo => { return GenericValidatorType.ValidateType(componente_tipo, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'id' to type " + typeof(Int32));
            RuleFor(actividad_tipo => actividad_tipo["nombre"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(actividad_tipo => { return GenericValidatorType.ValidateType(actividad_tipo, typeof(String)); }).WithMessage("Error when trying to parse the property 'nombre' to type " + typeof(String)).MaximumLength(1000);
            RuleFor(actividad_tipo => actividad_tipo["descripcion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad_tipo => { return GenericValidatorType.ValidateType(actividad_tipo, typeof(String)); }).WithMessage("Error when trying to parse the property 'descripcion' to type " + typeof(String)).MaximumLength(2000);
            //RuleFor(componente_tipo => componente_tipo["usuarioCreo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(componente_tipo => { return GenericValidatorType.ValidateType(componente_tipo, typeof(String)); }).WithMessage("Error when trying to parse the property 'usuarioCreo' to type " + typeof(String)).MaximumLength(30);
            //RuleFor(componente_tipo => componente_tipo["usuarioActualizo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(componente_tipo => { return GenericValidatorType.ValidateType(componente_tipo, typeof(String)); }).WithMessage("Error when trying to parse the property 'usuarioActualizo' to type " + typeof(String)).MaximumLength(30);
            //RuleFor(componente_tipo => componente_tipo["fechaCreacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(componente_tipo => { return GenericValidatorType.ValidateType(componente_tipo, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaCreacion' to type " + typeof(DateTime));
            //RuleFor(componente_tipo => componente_tipo["fechaActualizacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(componente_tipo => { return GenericValidatorType.ValidateType(componente_tipo, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaActualizacion' to type " + typeof(DateTime));
            //RuleFor(componente_tipo => componente_tipo["estado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(componente_tipo => { return GenericValidatorType.ValidateType(componente_tipo, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'estado' to type " + typeof(Int32));

        }
    }
}
