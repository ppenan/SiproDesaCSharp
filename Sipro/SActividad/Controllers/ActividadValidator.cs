using FluentValidation;
using Newtonsoft.Json.Linq;
using System;
using Utilities;

namespace SActividad.Controllers
{
    /// <summary>
    /// A class which represents the ComponenteTipoValidator.
    /// Generated by SIPRO TEAM. May 2018. 
    /// </summary>

    public class ActividadValidator : AbstractValidator<JObject>
    {
        public ActividadValidator()
        {
            //RuleFor(actividad => actividad["id"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'id' to type " + typeof(Int32));
            RuleFor(actividad => actividad["nombre"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(String)); }).WithMessage("Error when trying to parse the property 'nombre' to type " + typeof(String)).MaximumLength(1000);
            RuleFor(actividad => actividad["descripcion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(String)); }).WithMessage("Error when trying to parse the property 'descripcion' to type " + typeof(String)).MaximumLength(4000);
            RuleFor(actividad => actividad["porcentajeAvance"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'porcentajeAvance' to type " + typeof(Int32));
            //RuleFor(actividad => actividad["subcomponenteid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'subcomponenteid' to type " + typeof(Int32));
            //RuleFor(actividad => actividad["usuarioCreo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(String)); }).WithMessage("Error when trying to parse the property 'usuarioCreo' to type " + typeof(String)).MaximumLength(30);
            //RuleFor(actividad => actividad["usuarioActualizo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(String)); }).WithMessage("Error when trying to parse the property 'usuarioActualizo' to type " + typeof(String)).MaximumLength(30);
            //RuleFor(actividad => actividad["fechaCreacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaCreacion' to type " + typeof(DateTime));
            //RuleFor(actividad => actividad["fechaActualizacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaActualizacion' to type " + typeof(DateTime));
            //si
            RuleFor(actividad => actividad["actividadTipoid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'actividadTipoid' to type " + typeof(Int32));
            //RuleFor(actividad => actividad["estado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'estado' to type " + typeof(Int32));
            RuleFor(actividad => actividad["ueunidadEjecutora"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'ueunidadEjecutora' to type " + typeof(Int32));
            RuleFor(actividad => actividad["snip"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'snip' to type " + typeof(Int32));
            RuleFor(actividad => actividad["programa"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'programa' to type " + typeof(Int32));
            RuleFor(actividad => actividad["subprograma"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'subprograma' to type " + typeof(Int32));
            RuleFor(actividad => actividad["proyecto"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'proyecto' to type " + typeof(Int32));
            RuleFor(actividad => actividad["actividad"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'actividad' to type " + typeof(Int32));
            RuleFor(actividad => actividad["obra"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'obra' to type " + typeof(Int32));
            RuleFor(actividad => actividad["objeto"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'objeto' to type " + typeof(Int32));
            RuleFor(actividad => actividad["objetoId"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'objetoId' to type " + typeof(Int32));
            RuleFor(actividad => actividad["objetoTipo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'objetoTipo' to type " + typeof(Int32));
            RuleFor(actividad => actividad["duracion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'duracion' to type " + typeof(Int32));
            RuleFor(actividad => actividad["duracionDimension"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(String)); }).WithMessage("Error when trying to parse the property 'duracionDimension' to type " + typeof(String)).MaximumLength(30);
            RuleFor(actividad => actividad["predObjetoId"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'predObjetoId' to type " + typeof(Int32));
            RuleFor(actividad => actividad["predObjetoTipo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'predObjetoTipo' to type " + typeof(Int32));
            RuleFor(actividad => actividad["latitud"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(String)); }).WithMessage("Error when trying to parse the property 'latitud' to type " + typeof(String)).MaximumLength(30);
            RuleFor(actividad => actividad["longitud"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(String)); }).WithMessage("Error when trying to parse the property 'longitud' to type " + typeof(String)).MaximumLength(30);
            RuleFor(actividad => actividad["costo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'costo' to type " + typeof(decimal));
            RuleFor(actividad => actividad["acumulacionCostoid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int64)); }).WithMessage("Error when trying to parse the property 'acumulacionCostoid' to type " + typeof(Int64));
            RuleFor(actividad => actividad["renglon"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'renglon' to type " + typeof(Int32));
            RuleFor(actividad => actividad["ubicacionGeografica"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'ubicacionGeografica' to type " + typeof(Int32));
            RuleFor(actividad => actividad["peso"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'peso' to type " + typeof(Int32));
            RuleFor(actividad => actividad["orden"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'orden' to type " + typeof(Int32));
            RuleFor(actividad => actividad["treepath"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(String)); }).WithMessage("Error when trying to parse the property 'treepath' to type " + typeof(String)).MaximumLength(1000);
            RuleFor(actividad => actividad["nivel"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'nivel' to type " + typeof(Int32));
            RuleFor(actividad => actividad["proyectoBase"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'proyectoBase' to type " + typeof(Int32));
            RuleFor(actividad => actividad["componenteBase"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'componenteBase' to type " + typeof(Int32));
            RuleFor(actividad => actividad["productoBase"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'productoBase' to type " + typeof(Int32));
            RuleFor(actividad => actividad["fechaInicioReal"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaInicioReal' to type " + typeof(DateTime));
            RuleFor(actividad => actividad["fechaFinReal"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaFinReal' to type " + typeof(DateTime));
            RuleFor(actividad => actividad["inversionNueva"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'inversionNueva' to type " + typeof(Int32));
            RuleFor(actividad => actividad["fechaInicio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaInicio' to type " + typeof(DateTime));
            RuleFor(actividad => actividad["fechaFin"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaFin' to type " + typeof(DateTime));
            //RuleFor(actividad => actividad["ejercicio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'ejercicio' to type " + typeof(Int32));
            //RuleFor(actividad => actividad["entidad"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(actividad => { return GenericValidatorType.ValidateType(actividad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'entidad' to type " + typeof(Int32));
        }
    }
}
